#!/bin/bash

# The script generates a random password for each user specified on the command line.

# Display what user typed on the command line.
 # ${0} - parameter(var can contain context of the command line)
 # ${0} - this is the 1st position of parameter which contains the name of the script itself (what the person typed in the CLI to execute the script)
 # ${1} - stors the value of the 1st argument passed to the script on the CLI
 # diff between an parameter and an argument: 
 # parameter - variable that is been used inside the shell script
 # argument - data passed into the shell script
echo "You executed this command: ${0}"

# Display the path and filename of the script.
 # dirname shows the path without the last part (filename), and basename shows only the last part (filename without entire path)
echo "You used $(dirname ${0}) as the path to the $(basename ${0}) script."

# Tell them how mant arguments they passed in.
# (Inside the script they are parameters, outside they are arguments.)
 # ${#} shows nb of arguments (passed with command)
NUMBER_OF_PARAMETERS="${#}"
echo "You supplied ${NUMBER_OF_PARAMETERS} arguments(s) on the command line."

# Make sure they at least supply one argument.
 # '-lt' less then
if [[ "${NUMBER_OF_PARAMETERS}" -lt 1 ]]
then
 echo "Usage: ${0} USER_NAME [USER_NAME]..."
 exit 1                     # '1' - not success output of the command
fi

# Generate and display a password for each parameter.
for USER_NAME in "${@}"
do
 PASSWORD=$(date +%s%N | sha256sum | head -c48)
 echo "${USER_NAME}: ${PASSWORD}"
done
